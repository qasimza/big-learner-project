import { ParserOptions } from "@babel/parser";
import type { Plugin } from "vite";
type SuidPluginOptions = {
    /**
     * @default ["@suid/base", "@suid/codemod", "@suid/css", "@suid/icons-material", "@suid/material", "@suid/styled-engine", "@suid/system", "@suid/types", "@suid/utils"]
     */
    disableOptimizeDeps?: string[];
    optimizeImports?: {
        /**
         * @default true
         */
        enabled?: boolean;
        /**
         * @default ["@suid/icons-material", "@suid/material"]
         */
        paths?: string[];
    };
    parserOptions?: ParserOptions;
};
export default function suidPlugin(inOptions?: SuidPluginOptions): Plugin;
export declare function transform(code: string, options: SuidPluginOptions): import("@babel/generator").GeneratorResult;
export {};
